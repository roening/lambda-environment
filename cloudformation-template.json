{
	"AWSTemplateFormatVersion": "2010-09-09",
	"Parameters": {
	"EnvironmentName": {
		"Type": "String",
		"Description": "This name will be used to name all new resources."
	},
	"GitHubToken": {
		"Type": "String",
		"Description": "Token to connect with GitHub."
	},
	"GitHubOwner": {
		"Type": "String",
		"Description": "GitHub username of repository owner."
	},
	"GitHubRepo": {
		"Type": "String",
		"Description": "Application repository name."
	},
	"GitHubRepoBranch": {
		"Type": "String",
		"Description": "Application branch name."
	},
	"CodeBuildBucketName": {
		"Type": "String",
		"Description": "The same bucket specified in the buildspec.yml file."
	}
	},
	"Metadata": {
		"AWS::CloudFormation::Interface": {
			"ParameterGroups": [
				{
					"Label": {
						"default": "Environment Settings"
					},
					"Parameters": [
						"EnvironmentName"
					]
				},
				{
					"Label": {
						"default": "CodeBuild Settings"
					},
					"Parameters": [
						"CodeBuildBucketName"
					]
				},
				{
					"Label": {
						"default": "GitHub Settings"
					},
					"Parameters": [
						"GitHubRepo",
						"GitHubRepoBranch",
						"GitHubOwner",
						"GitHubToken"
					]
				}
			],
			"ParameterLabels": {
				"EnvironmentName": {
					"default": "Project Name"
				},
				"CodeBuildBucketName": {
					"default": "S3 Bucket Name"
				},
				"GitHubRepo": {
					"default": "Repository Name"
				},
				"GitHubRepoBranch": {
					"default": "Branch Name"
				},
				"GitHubOwner": {
					"default": "Owner Name"
				},
				"GitHubToken": {
					"default": "OAuth Token"
				}
			}
		}
	},
	"Resources": {
	"Codepipeline": {
		"Metadata": {
			"Comments": "This CloudFormation resource creates a CodePipeline resource that get the specific branch content of a GitHub repository, build the application with CodeBuild then deploy this using CloudFormation. The CodePipeline name is the \"EnvironmentName\" parameter value. The GitHub token used to get the branch content is the \"GitHubToken\" parameter value."
		},
		"Type": "AWS::CodePipeline::Pipeline",
		"Properties": {
		"ArtifactStore": {
			"Location": {
			"Ref": "CodepipelineS3"
			},
			"Type": "S3"
		},
		"Name": {
			"Ref": "EnvironmentName"
		},
		"RoleArn": {
			"Fn::GetAtt": [
			"CodepipelineIAMRole",
			"Arn"
			]
		},
		"Stages": [
			{
			"Name": "Source",
			"Actions": [
				{
				"Name": "Source",
				"ActionTypeId": {
					"Category": "Source",
					"Owner": "ThirdParty",
					"Provider": "GitHub",
					"Version": "1"
				},
				"RunOrder": 1,
				"Configuration": {
					"Branch": {
					"Ref": "GitHubRepoBranch"
					},
					"OAuthToken": {
					"Ref": "GitHubToken"
					},
					"Owner": {
					"Ref": "GitHubOwner"
					},
					"PollForSourceChanges": "false",
					"Repo": {
					"Ref": "GitHubRepo"
					}
				},
				"OutputArtifacts": [
					{
					"Name": "MyApp"
					}
				],
				"InputArtifacts": []
				}
			]
			},
			{
			"Name": "Build",
			"Actions": [
				{
				"Name": "CodeBuild",
				"ActionTypeId": {
					"Category": "Build",
					"Owner": "AWS",
					"Provider": "CodeBuild",
					"Version": "1"
				},
				"RunOrder": 1,
				"Configuration": {
					"ProjectName": {
					"Ref": "Codebuild"
					}
				},
				"OutputArtifacts": [
					{
					"Name": "MyAppBuild"
					}
				],
				"InputArtifacts": [
					{
					"Name": "MyApp"
					}
				]
				}
			]
			},
			{
			"Name": "Staging",
			"Actions": [
				{
				"Name": {
					"Ref": "EnvironmentName"
				},
				"ActionTypeId": {
					"Category": "Deploy",
					"Owner": "AWS",
					"Provider": "CloudFormation",
					"Version": "1"
				},
				"RunOrder": 1,
				"Configuration": {
					"ActionMode": "CHANGE_SET_REPLACE",
					"Capabilities": "CAPABILITY_IAM",
					"ChangeSetName": "CodePipeline",
					"RoleArn": {
					"Fn::GetAtt": [
						"CloudformationIAMRole",
						"Arn"
					]
					},
					"StackName": {
					"Ref": "EnvironmentName"
					},
					"TemplatePath": "MyAppBuild::outputSamTemplate.yaml"
				},
				"InputArtifacts": [
					{
					"Name": "MyAppBuild"
					}
				]
				}
			]
			},
			{
			"Name": "Deploy",
			"Actions": [
				{
				"Name": "Deploy",
				"ActionTypeId": {
					"Category": "Deploy",
					"Owner": "AWS",
					"Provider": "CloudFormation",
					"Version": "1"
				},
				"RunOrder": 1,
				"Configuration": {
					"ActionMode": "CHANGE_SET_EXECUTE",
					"ChangeSetName": "CodePipeline",
					"StackName": {
					"Ref": "EnvironmentName"
					}
				}
				}
			]
			}
		]
		}
	},
	"CodepipelineS3": {
		"Metadata": {
			"Comments": "This CloudFormation resource creates a S3 bucket used to upload CodePipeline and CodeBuild process bundles. "
		},
		"Type": "AWS::S3::Bucket",
		"DeletionPolicy": "Delete",
		"Properties": {
		"BucketName": {
			"Fn::Join": [
			"",
			[
				"codepipeline-",
				{
				"Ref": "AWS::Region"
				},
				"-",
				{
				"Ref": "AWS::AccountId"
				}
			]
			]
		}
		}
	},
	"CodepipelineIAMRole": {
		"Metadata": {
			"Comments": "This CloudFormation resource creates a IAM Role to grant specific permissions to the CodePipeline resource."
		},
		"Type": "AWS::IAM::Role",
		"Properties": {
		"AssumeRolePolicyDocument": {
			"Version": "2012-10-17",
			"Statement": [
			{
				"Sid": "",
				"Effect": "Allow",
				"Principal": {
				"Service": "codepipeline.amazonaws.com"
				},
				"Action": "sts:AssumeRole"
			}
			]
		},
		"Policies": [
			{
			"PolicyName": "AWS-CodePipeline-Service",
			"PolicyDocument": {
				"Statement": [
				{
					"Action": [
					"s3:GetObject",
					"s3:GetObjectVersion",
					"s3:GetBucketVersioning",
					"s3:PutObject"
					],
					"Resource": [
					{
						"Fn::Join": [
						"",
						[
							{
							"Fn::GetAtt": [
								"CodepipelineS3",
								"Arn"
							]
							},
							"/*"
						]
						]
					},
					{
						"Fn::Join": [
						"",
						[
							{
							"Fn::GetAtt": [
								"CodebuildS3",
								"Arn"
							]
							},
							"/*"
						]
						]
					}
					],
					"Effect": "Allow"
				},
				{
		            "Effect": "Allow",
		            "Action": [
		                "cloudformation:SetStackPolicy",
		                "cloudformation:CreateStack",
		                "cloudformation:DeleteStack",
		                "cloudformation:UpdateStack",
		                "cloudformation:CreateChangeSet",
		                "cloudformation:DescribeChangeSet",
		                "cloudformation:ExecuteChangeSet",
		                "cloudformation:DeleteChangeSet",
		                "cloudformation:DescribeStacks"
		            ],
		            "Resource": {
		            	"Fn::Join": [
		            		"",
		            		[
		            			"arn:aws:cloudformation:",
		            			{
		            				"Ref": "AWS::Region"
		            			},
		            			":",
		            			{
		            				"Ref": "AWS::AccountId"
		            			},
		            			":stack/",
		            			{
		            				"Ref": "EnvironmentName"
		            			},
		            			"/*"
		            		]
		            	]
		            }
		        },
		        {
		            "Effect": "Allow",
		            "Action": "cloudformation:ValidateTemplate",
		            "Resource": "*"
		        },
				{
					"Action": [
					"codebuild:BatchGetBuilds",
					"codebuild:StartBuild"
					],
					"Resource": "*",
					"Effect": "Allow"
				},
				{
					"Action": "iam:PassRole",
					"Resource": "*",
					"Effect": "Allow"
				}
				],
				"Version": "2012-10-17"
			}
			}
		],
		"RoleName": "AWS-CodePipeline-Service"
		}
	},
	"Codebuild": {
		"Metadata": {
			"Comments": "This CloudFormation resource creates a CodeBuild Project that will build the application."
		},
		"Type": "AWS::CodeBuild::Project",
		"Properties": {
		"Artifacts": {
			"Type": "CODEPIPELINE"
		},
		"Environment": {
			"Type": "LINUX_CONTAINER",
			"Image": "aws/codebuild/python:3.6.5",
			"ComputeType": "BUILD_GENERAL1_SMALL"
		},
		"Name": {
			"Ref": "EnvironmentName"
		},
		"ServiceRole": {
			"Fn::GetAtt": [
			"CodebuildIAMRole",
			"Arn"
			]
		},
		"Source": {
			"Type": "CODEPIPELINE"
		},
		"TimeoutInMinutes": 60
		}
	},
	"CodebuildIAMRole": {
		"Metadata": {
			"Comments": "This CloudFormation resource creates a IAM Role that will grant specific permissions to the CodeBuild Project."
		},
		"Type": "AWS::IAM::Role",
		"Properties": {
		"AssumeRolePolicyDocument": {
			"Version": "2012-10-17",
			"Statement": [
			{
				"Effect": "Allow",
				"Principal": {
				"Service": "codebuild.amazonaws.com"
				},
				"Action": "sts:AssumeRole"
			}
			]
		},
		"RoleName": "AWS-CodeBuild-Service",
		"Policies": [
			{
			"PolicyName": "AllowS3",
			"PolicyDocument": {
				"Version": "2012-10-17",
				"Statement": [
				{
					"Effect": "Allow",
					"Action": "s3:PutObject",
					"Resource": {
					"Fn::Join": [
						"",
						[
						{
							"Fn::GetAtt": [
							"CodebuildS3",
							"Arn"
							]
						},
						"/*"
						]
					]
					}
				}
				]
			}
			},
			{
			"PolicyName": {
				"Fn::Join": [
				"",
				[
					"CodeBuildBasePolicy-",
					{
					"Ref": "EnvironmentName"
					},
					"-",
					{
					"Ref": "AWS::Region"
					}
				]
				]
			},
			"PolicyDocument": {
				"Version": "2012-10-17",
				"Statement": [
				{
					"Effect": "Allow",
					"Resource": [
					{
						"Fn::Join": [
						"",
						[
							"arn:aws:logs:",
							{
							"Ref": "AWS::Region"
							},
							":",
							{
							"Ref": "AWS::AccountId"
							},
							":log-group:/aws/codebuild/",
							{
							"Ref": "EnvironmentName"
							}
						]
						]
					},
					{
						"Fn::Join": [
						"",
						[
							"arn:aws:logs:",
							{
							"Ref": "AWS::Region"
							},
							":",
							{
							"Ref": "AWS::AccountId"
							},
							":log-group:/aws/codebuild/",
							{
							"Ref": "EnvironmentName"
							},
							":*"
						]
						]
					}
					],
					"Action": [
					"logs:CreateLogGroup",
					"logs:CreateLogStream",
					"logs:PutLogEvents"
					]
				},
				{
					"Effect": "Allow",
					"Resource": {
					"Fn::Join": [
						"",
						[
						{
							"Fn::GetAtt": [
							"CodepipelineS3",
							"Arn"
							]
						},
						"/*"
						]
					]
					},
					"Action": [
					"s3:PutObject",
					"s3:GetObject",
					"s3:GetObjectVersion"
					]
				}
				]
			}
			}
		]
		}
	},
	"CodebuildS3": {
		"Metadata": {
			"Comments": "This CloudFormation resource creates a S3 bucket that will be used to upload the CloudFormation package created by the CodeBuild process."
		},
		"Type": "AWS::S3::Bucket",
		"DeletionPolicy": "Delete",
		"Properties": {
		"BucketName": {
			"Ref": "CodeBuildBucketName"
		}
		}
	},
	"CloudformationIAMRole": {
		"Metadata": {
			"Comments": "This CloudFormation resource creates a IAM Role that will grant specific permissions to the CloudFormation stack, created by CodePipeline, that will deploy the application."
		},
		"Type": "AWS::IAM::Role",
		"Properties": {
		"AssumeRolePolicyDocument": {
			"Version": "2012-10-17",
			"Statement": [
			{
				"Sid": "",
				"Effect": "Allow",
				"Principal": {
				"Service": "cloudformation.amazonaws.com"
				},
				"Action": "sts:AssumeRole"
			}
			]
		},
		"RoleName": {
			"Fn::Join": [
			"",
			[
				"CloudFormation-",
				{
				"Ref": "EnvironmentName"
				}
			]
			]
		},
		"ManagedPolicyArns": [
			"arn:aws:iam::aws:policy/AWSLambdaExecute"
		],
		"Policies": [
			{
			"PolicyName": "CloudFormation",
			"PolicyDocument": {
				"Statement": [
				{
					"Action": "lambda:*",
					"Resource": {
					"Fn::Join": [
						"",
						[
						"arn:aws:lambda:",
						{
							"Ref": "AWS::Region"
						},
						":",
						{
							"Ref": "AWS::AccountId"
						},
						":function:*"
						]
					]
					},
					"Effect": "Allow"
				},
				{
					"Action": "apigateway:*",
					"Resource": {
					"Fn::Join": [
						"",
						[
						"arn:aws:apigateway:",
						{
							"Ref": "AWS::Region"
						},
						"::*"
						]
					]
					},
					"Effect": "Allow"
				},
				{
					"Action": [
					"iam:GetRole",
					"iam:CreateRole",
					"iam:DeleteRole",
					"iam:PutRolePolicy",
					"iam:AttachRolePolicy",
					"iam:DeleteRolePolicy",
					"iam:DetachRolePolicy"
					],
					"Resource": {
					"Fn::Join": [
						"",
						[
						"arn:aws:iam::",
						{
							"Ref": "AWS::AccountId"
						},
						":role/*"
						]
					]
					},
					"Effect": "Allow"
				},
				{
					"Action": "iam:PassRole",
					"Resource": "*",
					"Effect": "Allow"
				},
				{
					"Action": "cloudformation:CreateChangeSet",
					"Resource": "arn:aws:cloudformation:sa-east-1:aws:transform/Serverless-2016-10-31",
					"Effect": "Allow"
				}
				],
				"Version": "2012-10-17"
			}
			}
		]
		}
	}
	}
}